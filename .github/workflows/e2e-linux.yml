name: E2E Linux

on:
  schedule:
  - cron:  "0 20 * * *"
  workflow_dispatch:
    inputs:
      network:
        description: 'Network'
        required: true
        default: 'preview'
      node_db_cache:
        description: 'Node DB Cache'
        required: true
        default: 'GH'
        type: choice
        options:
        - AWS
        - GH
      pr:
        description: 'PR number or "master"'
        default: 'master'
      tags:
        description: 'Test tags (all, light, offchain...)'
        default: 'all'

defaults:
  run:
    working-directory: ./test/e2e

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      TESTS_E2E_FIXTURES: ${{ secrets.TESTS_E2E_FIXTURES }}
      TESTS_E2E_BINDIR: ./artifacts
      NETWORK: ${{ github.event.inputs.network || 'preprod' }}
      PR: ${{ github.event.inputs.pr || '' }}
      NODE_DB_CACHE: ${{ github.event.inputs.node_db_cache || 'GH' }}
      TAGS: ${{ github.event.inputs.tags || 'all' }}

    steps:

    - name: Trigger Buildkite Pipeline
      id: build
      uses: EnricoMi/trigger-pipeline-action@master
      env:
        PIPELINE: "input-output-hk/cardano-wallet-e2e-linux"
        BUILDKITE_API_ACCESS_TOKEN: ${{ secrets.BUILDKITE_TOKEN_READ_BUILDS_ARTIFACTS }}

    - uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1.2
        bundler-cache: true

    - name: Install dependencies
      run: bundle install

    - name: 🕒 Get Date/Time
      id: date-time
      shell: bash
      run: |
        echo "value=$(rake datetime)" >> $GITHUB_OUTPUT

    - name: 💽 AWS Cache node db
      if: ${{ env.NODE_DB_CACHE == 'AWS' }}
      run: rake get_latest_node_db[$NETWORK]

    - name: 💾 GH Cache node db
      if: ${{ env.NODE_DB_CACHE == 'GH' }}
      id: cache
      uses: actions/cache@v2.1.7
      with:
        path: test/e2e/state/node_db/${{ env.NETWORK }}
        key: node-db-${{ runner.os }}-${{ env.NETWORK }}-${{ steps.date-time.outputs.value }}
        restore-keys: |
          node-db-${{ runner.os }}-${{ env.NETWORK }}-

    - name: 💾 Cache wallet db
      id: cache-wallet
      uses: actions/cache@v2.1.7
      with:
        path: test/e2e/state/wallet_db/${{ env.NETWORK }}
        key: wallet-db3-${{ runner.os }}-${{ env.NETWORK }}-${{ steps.date-time.outputs.value }}
        restore-keys: |
          wallet-db3-${{ runner.os }}-${{ env.NETWORK }}-

    - name: Download Buildkite Artifacts
      uses: EnricoMi/download-buildkite-artifact-action@v1
      with:
        buildkite_token: ${{ secrets.BUILDKITE_TOKEN_READ_BUILDS_ARTIFACTS }}
        buildkite_build_url: ${{ steps.build.outputs.url }}
        ignore_build_states: blocked,canceled,skipped,not_run
        output_path: ./test/e2e/${{ env.TESTS_E2E_BINDIR }}

    - name: ⚙️ Setup (get latest configs and decode fixtures)
      run: rake setup[$NETWORK,$PR]
    
    - name: Testing
      run: |
        pwd
        ls -la
        ls -la ../../

    - name: 🔍 Display versions
      run: rake display_versions

    - name: 🚀 Start node and wallet
      run: rake start_node_and_wallet[$NETWORK]

    - name: ⏳ Wait until node is synced
      run: rake wait_until_node_synced

    - name: 🧪 Run all tests
      run: rake spec SPEC_OPTS="-t $TAGS"

    - name: 🏁 Stop node and wallet
      run: rake stop_node_and_wallet[$NETWORK]

    - name: 📎 Upload state
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: ${{ runner.os }}-state
        path: |
          test/e2e/state/logs
          test/e2e/state/configs
          test/e2e/state/wallet_db

