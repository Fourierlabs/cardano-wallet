{
  pkgs = hackage:
    {
      packages = {
        "charset".revision = (((hackage."charset")."0.3.9").revisions).default;
        "wcwidth".revision = (((hackage."wcwidth")."0.0.2").revisions).default;
        "wcwidth".flags.split-base = true;
        "wcwidth".flags.cli = false;
        "old-time".revision = (((hackage."old-time")."1.1.0.3").revisions).default;
        "retrie".revision = (((hackage."retrie")."1.2.0.1").revisions).default;
        "retrie".flags.buildexecutable = true;
        "implicit-hie-cradle".revision = (((hackage."implicit-hie-cradle")."0.5.0.0").revisions).default;
        "ghc-boot".revision = (((hackage."ghc-boot")."9.2.4").revisions).default;
        "mmorph".revision = (((hackage."mmorph")."1.2.0").revisions).default;
        "mod".revision = (((hackage."mod")."0.1.2.2").revisions).default;
        "mod".flags.semirings = true;
        "mod".flags.vector = true;
        "hls-floskell-plugin".revision = (((hackage."hls-floskell-plugin")."1.0.1.2").revisions).default;
        "network-bsd".revision = (((hackage."network-bsd")."2.8.1.0").revisions).default;
        "ghcide-bench".revision = (((hackage."ghcide-bench")."0.1").revisions).default;
        "svg-builder".revision = (((hackage."svg-builder")."0.1.1").revisions).default;
        "happy".revision = (((hackage."happy")."1.20.0").revisions).default;
        "filepattern".revision = (((hackage."filepattern")."0.1.3").revisions).default;
        "blaze-textual".revision = (((hackage."blaze-textual")."0.2.2.1").revisions).default;
        "blaze-textual".flags.integer-simple = false;
        "blaze-textual".flags.developer = false;
        "blaze-textual".flags.native = true;
        "streaming-commons".revision = (((hackage."streaming-commons")."0.2.2.4").revisions).default;
        "streaming-commons".flags.use-bytestring-builder = false;
        "monoid-subclasses".revision = (((hackage."monoid-subclasses")."1.2").revisions).default;
        "pretty".revision = (((hackage."pretty")."1.1.3.6").revisions).default;
        "word-wrap".revision = (((hackage."word-wrap")."0.5").revisions).default;
        "haskell-src-exts".revision = (((hackage."haskell-src-exts")."1.23.1").revisions).default;
        "ormolu".revision = (((hackage."ormolu")."0.5.0.1").revisions).default;
        "ormolu".flags.dev = false;
        "ormolu".flags.fixity-th = true;
        "cubicbezier".revision = (((hackage."cubicbezier")."0.6.0.6").revisions).default;
        "cubicbezier".flags.debug = false;
        "hls-change-type-signature-plugin".revision = (((hackage."hls-change-type-signature-plugin")."1.0.1.1").revisions).default;
        "network-uri".revision = (((hackage."network-uri")."2.6.4.1").revisions).default;
        "parsers".revision = (((hackage."parsers")."0.12.11").revisions).default;
        "parsers".flags.parsec = true;
        "parsers".flags.binary = true;
        "parsers".flags.attoparsec = true;
        "unordered-containers".revision = (((hackage."unordered-containers")."0.2.19.1").revisions).default;
        "unordered-containers".flags.debug = false;
        "Diff".revision = (((hackage."Diff")."0.4.1").revisions).default;
        "integer-logarithms".revision = (((hackage."integer-logarithms")."1.0.3.1").revisions).default;
        "integer-logarithms".flags.check-bounds = false;
        "integer-logarithms".flags.integer-gmp = true;
        "HUnit".revision = (((hackage."HUnit")."1.6.2.0").revisions).default;
        "psqueues".revision = (((hackage."psqueues")."0.2.7.3").revisions).default;
        "adjunctions".revision = (((hackage."adjunctions")."4.4.2").revisions).default;
        "hashtables".revision = (((hackage."hashtables")."1.3.1").revisions).default;
        "hashtables".flags.portable = false;
        "hashtables".flags.sse42 = false;
        "hashtables".flags.bounds-checking = false;
        "hashtables".flags.detailed-profiling = false;
        "hashtables".flags.debug = false;
        "hashtables".flags.unsafe-tricks = true;
        "dlist".revision = (((hackage."dlist")."1.0").revisions).default;
        "dlist".flags.werror = false;
        "string-interpolate".revision = (((hackage."string-interpolate")."0.3.1.2").revisions).default;
        "string-interpolate".flags.bytestring-builder = false;
        "string-interpolate".flags.text-builder = false;
        "string-interpolate".flags.extended-benchmarks = false;
        "text".revision = (((hackage."text")."1.2.5.0").revisions).default;
        "easy-file".revision = (((hackage."easy-file")."0.2.2").revisions).default;
        "deferred-folds".revision = (((hackage."deferred-folds")."0.9.18.2").revisions).default;
        "ghc-lib-parser".revision = (((hackage."ghc-lib-parser")."9.2.4.20220729").revisions).default;
        "groups".revision = (((hackage."groups")."0.5.3").revisions).default;
        "entropy".revision = (((hackage."entropy")."0.4.1.10").revisions).default;
        "entropy".flags.donotgetentropy = false;
        "lsp".revision = (((hackage."lsp")."1.6.0.0").revisions).default;
        "lsp".flags.demo = false;
        "array".revision = (((hackage."array")."0.5.4.0").revisions).default;
        "base64-bytestring".revision = (((hackage."base64-bytestring")."1.2.1.0").revisions).default;
        "network".revision = (((hackage."network")."3.1.2.7").revisions).default;
        "network".flags.devel = false;
        "invariant".revision = (((hackage."invariant")."0.6").revisions).default;
        "parallel".revision = (((hackage."parallel")."3.2.2.0").revisions).default;
        "random-shuffle".revision = (((hackage."random-shuffle")."0.0.4").revisions).default;
        "parser-combinators".revision = (((hackage."parser-combinators")."1.3.0").revisions).default;
        "parser-combinators".flags.dev = false;
        "MonadRandom".revision = (((hackage."MonadRandom")."0.5.3").revisions).default;
        "text-rope".revision = (((hackage."text-rope")."0.2").revisions).default;
        "text-rope".flags.debug = false;
        "vector".revision = (((hackage."vector")."0.12.3.1").revisions).default;
        "vector".flags.internalchecks = false;
        "vector".flags.wall = false;
        "vector".flags.boundschecks = true;
        "vector".flags.unsafechecks = false;
        "hls-explicit-fixity-plugin".revision = (((hackage."hls-explicit-fixity-plugin")."1.0.0.0").revisions).default;
        "lens".revision = (((hackage."lens")."5.1.1").revisions).default;
        "lens".flags.test-templates = true;
        "lens".flags.benchmark-uniplate = false;
        "lens".flags.test-properties = true;
        "lens".flags.j = false;
        "lens".flags.trustworthy = true;
        "lens".flags.test-hunit = true;
        "lens".flags.dump-splices = false;
        "lens".flags.inlining = true;
        "some".revision = (((hackage."some")."1.0.3").revisions).default;
        "some".flags.newtype-unsafe = true;
        "temporary".revision = (((hackage."temporary")."1.3").revisions).default;
        "heaps".revision = (((hackage."heaps")."0.4").revisions).default;
        "hls-retrie-plugin".revision = (((hackage."hls-retrie-plugin")."1.0.2.2").revisions).default;
        "optparse-simple".revision = (((hackage."optparse-simple")."0.1.1.4").revisions).default;
        "optparse-simple".flags.build-example = false;
        "comonad".revision = (((hackage."comonad")."5.0.8").revisions).default;
        "comonad".flags.containers = true;
        "comonad".flags.distributive = true;
        "comonad".flags.indexed-traversable = true;
        "profunctors".revision = (((hackage."profunctors")."5.6.2").revisions).default;
        "diagrams-lib".revision = (((hackage."diagrams-lib")."1.4.5.3").revisions).default;
        "hls-refine-imports-plugin".revision = (((hackage."hls-refine-imports-plugin")."1.0.3.0").revisions).default;
        "extra".revision = (((hackage."extra")."1.7.12").revisions).default;
        "base-compat".revision = (((hackage."base-compat")."0.12.2").revisions).default;
        "bitvec".revision = (((hackage."bitvec")."1.1.3.0").revisions).default;
        "bitvec".flags.libgmp = false;
        "text-zipper".revision = (((hackage."text-zipper")."0.12").revisions).default;
        "contravariant".revision = (((hackage."contravariant")."1.5.5").revisions).default;
        "contravariant".flags.tagged = true;
        "contravariant".flags.semigroups = true;
        "contravariant".flags.statevar = true;
        "ghc".revision = (((hackage."ghc")."9.2.4").revisions).default;
        "hiedb".revision = (((hackage."hiedb")."0.4.2.0").revisions).default;
        "hls-gadt-plugin".revision = (((hackage."hls-gadt-plugin")."1.0.0.0").revisions).default;
        "primitive-extras".revision = (((hackage."primitive-extras")."0.10.1.5").revisions).default;
        "base-compat-batteries".revision = (((hackage."base-compat-batteries")."0.12.2").revisions).default;
        "safe".revision = (((hackage."safe")."0.3.19").revisions).default;
        "yaml".revision = (((hackage."yaml")."0.11.8.0").revisions).default;
        "yaml".flags.no-examples = true;
        "yaml".flags.no-exe = true;
        "sorted-list".revision = (((hackage."sorted-list")."0.2.1.0").revisions).default;
        "hls-graph".revision = (((hackage."hls-graph")."1.8.0.0").revisions).default;
        "hls-graph".flags.stm-stats = false;
        "hls-graph".flags.embed-files = false;
        "hls-graph".flags.pedantic = false;
        "primes".revision = (((hackage."primes")."0.2.1.0").revisions).default;
        "th-lift-instances".revision = (((hackage."th-lift-instances")."0.1.20").revisions).default;
        "Cabal".revision = (((hackage."Cabal")."3.6.3.0").revisions).default;
        "pretty-simple".revision = (((hackage."pretty-simple")."4.1.1.0").revisions).default;
        "pretty-simple".flags.buildexe = true;
        "pretty-simple".flags.buildexample = false;
        "mtl-compat".revision = (((hackage."mtl-compat")."0.2.2").revisions).default;
        "mtl-compat".flags.two-point-two = false;
        "mtl-compat".flags.two-point-one = false;
        "diagrams-solve".revision = (((hackage."diagrams-solve")."0.1.3").revisions).default;
        "assoc".revision = (((hackage."assoc")."1.0.2").revisions).default;
        "ghc-trace-events".revision = (((hackage."ghc-trace-events")."0.1.2.6").revisions).default;
        "unliftio".revision = (((hackage."unliftio")."0.2.22.0").revisions).default;
        "hls-fourmolu-plugin".revision = (((hackage."hls-fourmolu-plugin")."1.1.0.0").revisions).default;
        "data-fix".revision = (((hackage."data-fix")."0.3.2").revisions).default;
        "retry".revision = (((hackage."retry")."0.9.3.0").revisions).default;
        "retry".flags.lib-werror = false;
        "js-jquery".revision = (((hackage."js-jquery")."3.3.1").revisions).default;
        "integration".revision = (((hackage."integration")."0.2.1").revisions).default;
        "config-ini".revision = (((hackage."config-ini")."0.2.5.0").revisions).default;
        "config-ini".flags.enable-doctests = false;
        "js-dgtable".revision = (((hackage."js-dgtable")."0.5.2").revisions).default;
        "diagrams-core".revision = (((hackage."diagrams-core")."1.5.0.1").revisions).default;
        "cereal-vector".revision = (((hackage."cereal-vector")."0.2.0.1").revisions).default;
        "tasty-expected-failure".revision = (((hackage."tasty-expected-failure")."0.12.3").revisions).default;
        "alex".revision = (((hackage."alex")."3.2.7.1").revisions).default;
        "old-locale".revision = (((hackage."old-locale")."1.0.0.7").revisions).default;
        "constraints-extras".revision = (((hackage."constraints-extras")."0.3.2.1").revisions).default;
        "constraints-extras".flags.build-readme = true;
        "tasty".revision = (((hackage."tasty")."1.4.2.3").revisions).default;
        "tasty".flags.clock = true;
        "tasty".flags.unix = true;
        "hls-plugin-api".revision = (((hackage."hls-plugin-api")."1.5.0.0").revisions).default;
        "hls-plugin-api".flags.pedantic = false;
        "mtl".revision = (((hackage."mtl")."2.2.2").revisions).default;
        "OneTuple".revision = (((hackage."OneTuple")."0.3.1").revisions).default;
        "monad-logger".revision = (((hackage."monad-logger")."0.3.37").revisions).default;
        "monad-logger".flags.template_haskell = true;
        "parsec".revision = (((hackage."parsec")."3.1.15.0").revisions).default;
        "bytestring".revision = (((hackage."bytestring")."0.11.3.1").revisions).default;
        "list-t".revision = (((hackage."list-t")."1.0.5.3").revisions).default;
        "gitrev".revision = (((hackage."gitrev")."1.3.1").revisions).default;
        "reflection".revision = (((hackage."reflection")."2.1.6").revisions).default;
        "reflection".flags.slow = false;
        "reflection".flags.template-haskell = true;
        "binary-orphans".revision = (((hackage."binary-orphans")."1.0.3").revisions).default;
        "lens-aeson".revision = (((hackage."lens-aeson")."1.2.2").revisions).default;
        "operational".revision = (((hackage."operational")."0.2.4.1").revisions).default;
        "operational".flags.buildexamples = true;
        "strict".revision = (((hackage."strict")."0.4.0.1").revisions).default;
        "strict".flags.assoc = true;
        "aeson".revision = (((hackage."aeson")."2.0.3.0").revisions).default;
        "aeson".flags.ordered-keymap = true;
        "aeson".flags.cffi = false;
        "zlib".revision = (((hackage."zlib")."0.6.3.0").revisions).default;
        "zlib".flags.non-blocking-ffi = false;
        "zlib".flags.bundled-c-zlib = false;
        "zlib".flags.pkg-config = false;
        "tagged".revision = (((hackage."tagged")."0.8.6.1").revisions).default;
        "tagged".flags.deepseq = true;
        "tagged".flags.transformers = true;
        "splitmix".revision = (((hackage."splitmix")."0.1.0.4").revisions).default;
        "splitmix".flags.optimised-mixer = false;
        "matrices".revision = (((hackage."matrices")."0.5.0").revisions).default;
        "file-embed".revision = (((hackage."file-embed")."0.0.15.0").revisions).default;
        "JuicyPixels".revision = (((hackage."JuicyPixels")."3.3.7").revisions).default;
        "JuicyPixels".flags.mmap = false;
        "fail".revision = (((hackage."fail")."4.9.0.0").revisions).default;
        "attoparsec".revision = (((hackage."attoparsec")."0.14.4").revisions).default;
        "attoparsec".flags.developer = false;
        "ghcide".revision = (((hackage."ghcide")."1.8.0.0").revisions).default;
        "ghcide".flags.executable = true;
        "ghcide".flags.ghc-patched-unboxed-bytecode = false;
        "ghcide".flags.test-exe = true;
        "ghcide".flags.ekg = false;
        "active".revision = (((hackage."active")."0.2.0.16").revisions).default;
        "bytes".revision = (((hackage."bytes")."0.17.2").revisions).default;
        "monad-dijkstra".revision = (((hackage."monad-dijkstra")."0.1.1.3").revisions).default;
        "th-compat".revision = (((hackage."th-compat")."0.1.4").revisions).default;
        "enummapset".revision = (((hackage."enummapset")."0.7.0.0").revisions).default;
        "enummapset".flags.debug = false;
        "fmlist".revision = (((hackage."fmlist")."0.9.4").revisions).default;
        "filepath".revision = (((hackage."filepath")."1.4.2.2").revisions).default;
        "th-lift".revision = (((hackage."th-lift")."0.8.2").revisions).default;
        "libyaml".revision = (((hackage."libyaml")."0.1.2").revisions).default;
        "libyaml".flags.system-libyaml = false;
        "libyaml".flags.no-unicode = false;
        "terminal-size".revision = (((hackage."terminal-size")."0.3.3").revisions).default;
        "hls-ormolu-plugin".revision = (((hackage."hls-ormolu-plugin")."1.0.2.2").revisions).default;
        "unliftio-core".revision = (((hackage."unliftio-core")."0.2.0.1").revisions).default;
        "stm".revision = (((hackage."stm")."2.5.0.2").revisions).default;
        "focus".revision = (((hackage."focus")."1.0.3").revisions).default;
        "floskell".revision = (((hackage."floskell")."0.10.6").revisions).default;
        "void".revision = (((hackage."void")."0.7.3").revisions).default;
        "void".flags.safe = false;
        "MemoTrie".revision = (((hackage."MemoTrie")."0.6.10").revisions).default;
        "MemoTrie".flags.examples = false;
        "semigroups".revision = (((hackage."semigroups")."0.20").revisions).default;
        "semigroups".flags.bytestring = true;
        "semigroups".flags.bytestring-builder = false;
        "semigroups".flags.tagged = true;
        "semigroups".flags.containers = true;
        "semigroups".flags.deepseq = true;
        "semigroups".flags.template-haskell = true;
        "semigroups".flags.binary = true;
        "semigroups".flags.transformers = true;
        "semigroups".flags.unordered-containers = true;
        "semigroups".flags.text = true;
        "semigroups".flags.hashable = true;
        "free".revision = (((hackage."free")."5.1.9").revisions).default;
        "terminfo".revision = (((hackage."terminfo")."0.4.1.5").revisions).default;
        "js-flot".revision = (((hackage."js-flot")."0.8.3").revisions).default;
        "haskell-lexer".revision = (((hackage."haskell-lexer")."1.1").revisions).default;
        "hls-call-hierarchy-plugin".revision = (((hackage."hls-call-hierarchy-plugin")."1.1.0.0").revisions).default;
        "microlens".revision = (((hackage."microlens")."0.4.13.0").revisions).default;
        "sandwich".revision = (((hackage."sandwich")."0.1.1.2").revisions).default;
        "ghc-heap".revision = (((hackage."ghc-heap")."9.2.4").revisions).default;
        "resourcet".revision = (((hackage."resourcet")."1.2.6").revisions).default;
        "hls-rename-plugin".revision = (((hackage."hls-rename-plugin")."1.0.1.0").revisions).default;
        "Chart-diagrams".revision = (((hackage."Chart-diagrams")."1.9.4").revisions).default;
        "data-default-instances-old-locale".revision = (((hackage."data-default-instances-old-locale")."0.0.1").revisions).default;
        "fuzzy".revision = (((hackage."fuzzy")."0.1.0.1").revisions).default;
        "hls-explicit-imports-plugin".revision = (((hackage."hls-explicit-imports-plugin")."1.1.0.1").revisions).default;
        "foldl".revision = (((hackage."foldl")."1.4.12").revisions).default;
        "unix-compat".revision = (((hackage."unix-compat")."0.5.4").revisions).default;
        "unix-compat".flags.old-time = false;
        "case-insensitive".revision = (((hackage."case-insensitive")."1.2.1.0").revisions).default;
        "type-equality".revision = (((hackage."type-equality")."1").revisions).default;
        "cryptohash-sha1".revision = (((hackage."cryptohash-sha1")."0.11.101.0").revisions).default;
        "cryptohash-md5".revision = (((hackage."cryptohash-md5")."0.11.101.0").revisions).default;
        "data-default".revision = (((hackage."data-default")."0.7.1.1").revisions).default;
        "sqlite-simple".revision = (((hackage."sqlite-simple")."0.4.18.2").revisions).default;
        "implicit-hie".revision = (((hackage."implicit-hie")."0.1.2.7").revisions).default;
        "implicit-hie".flags.executable = true;
        "call-stack".revision = (((hackage."call-stack")."0.4.0").revisions).default;
        "statestack".revision = (((hackage."statestack")."0.3.1").revisions).default;
        "primitive-unlifted".revision = (((hackage."primitive-unlifted")."0.1.3.1").revisions).default;
        "stm-hamt".revision = (((hackage."stm-hamt")."1.2.0.8").revisions).default;
        "dependent-map".revision = (((hackage."dependent-map")."0.4.0.0").revisions).default;
        "linear".revision = (((hackage."linear")."1.21.10").revisions).default;
        "linear".flags.template-haskell = true;
        "linear".flags.herbie = false;
        "hp2pretty".revision = (((hackage."hp2pretty")."0.10").revisions).default;
        "ghc-prim".revision = (((hackage."ghc-prim")."0.8.0").revisions).default;
        "hslogger".revision = (((hackage."hslogger")."1.3.1.0").revisions).default;
        "hslogger".flags.network--gt-3_0_0 = true;
        "ghc-boot-th".revision = (((hackage."ghc-boot-th")."9.2.4").revisions).default;
        "opentelemetry".revision = (((hackage."opentelemetry")."0.8.0").revisions).default;
        "indexed-traversable".revision = (((hackage."indexed-traversable")."0.1.2").revisions).default;
        "distributive".revision = (((hackage."distributive")."0.6.2.1").revisions).default;
        "distributive".flags.tagged = true;
        "distributive".flags.semigroups = true;
        "hls-module-name-plugin".revision = (((hackage."hls-module-name-plugin")."1.1.0.0").revisions).default;
        "ghc-paths".revision = (((hackage."ghc-paths")."0.1.0.12").revisions).default;
        "lsp-test".revision = (((hackage."lsp-test")."0.14.1.0").revisions).default;
        "text-short".revision = (((hackage."text-short")."0.1.5").revisions).default;
        "text-short".flags.asserts = false;
        "vector-space".revision = (((hackage."vector-space")."0.16").revisions).default;
        "hls-test-utils".revision = (((hackage."hls-test-utils")."1.4.0.0").revisions).default;
        "hls-test-utils".flags.pedantic = false;
        "Boolean".revision = (((hackage."Boolean")."0.2.4").revisions).default;
        "regex-tdfa".revision = (((hackage."regex-tdfa")."1.3.2").revisions).default;
        "regex-tdfa".flags.force-o2 = false;
        "bifunctors".revision = (((hackage."bifunctors")."5.5.13").revisions).default;
        "bifunctors".flags.tagged = true;
        "bifunctors".flags.semigroups = true;
        "kan-extensions".revision = (((hackage."kan-extensions")."5.2.5").revisions).default;
        "heapsize".revision = (((hackage."heapsize")."0.3.0.1").revisions).default;
        "uuid".revision = (((hackage."uuid")."1.3.15").revisions).default;
        "lifted-async".revision = (((hackage."lifted-async")."0.10.2.3").revisions).default;
        "microlens-mtl".revision = (((hackage."microlens-mtl")."0.2.0.2").revisions).default;
        "ghc-exactprint".revision = (((hackage."ghc-exactprint")."1.5.0").revisions).default;
        "ghc-exactprint".flags.dev = false;
        "ghc-exactprint".flags.roundtrip = false;
        "base".revision = (((hackage."base")."4.16.3.0").revisions).default;
        "time".revision = (((hackage."time")."1.11.1.1").revisions).default;
        "ListLike".revision = (((hackage."ListLike")."4.7.7").revisions).default;
        "network-info".revision = (((hackage."network-info")."0.2.1").revisions).default;
        "haddock-library".revision = (((hackage."haddock-library")."1.10.0").revisions).default;
        "async".revision = (((hackage."async")."2.2.4").revisions).default;
        "async".flags.bench = false;
        "cabal-doctest".revision = (((hackage."cabal-doctest")."1.0.9").revisions).default;
        "random".revision = (((hackage."random")."1.2.1.1").revisions).default;
        "unix-time".revision = (((hackage."unix-time")."0.4.8").revisions).default;
        "th-orphans".revision = (((hackage."th-orphans")."0.13.14").revisions).default;
        "process".revision = (((hackage."process")."1.6.13.2").revisions).default;
        "hls-code-range-plugin".revision = (((hackage."hls-code-range-plugin")."1.0.0.0").revisions).default;
        "cereal".revision = (((hackage."cereal")."0.5.8.3").revisions).default;
        "cereal".flags.bytestring-builder = false;
        "utf8-string".revision = (((hackage."utf8-string")."1.0.2").revisions).default;
        "fsnotify".revision = (((hackage."fsnotify")."0.4.0.1").revisions).default;
        "megaparsec".revision = (((hackage."megaparsec")."9.2.2").revisions).default;
        "megaparsec".flags.dev = false;
        "base16-bytestring".revision = (((hackage."base16-bytestring")."1.0.2.0").revisions).default;
        "conduit".revision = (((hackage."conduit")."1.3.4.3").revisions).default;
        "transformers-base".revision = (((hackage."transformers-base")."0.4.6").revisions).default;
        "transformers-base".flags.orphaninstances = true;
        "unbounded-delays".revision = (((hackage."unbounded-delays")."0.1.1.1").revisions).default;
        "data-default-class".revision = (((hackage."data-default-class")."0.1.2.0").revisions).default;
        "regex-base".revision = (((hackage."regex-base")."0.94.0.2").revisions).default;
        "vector-algorithms".revision = (((hackage."vector-algorithms")."0.9.0.1").revisions).default;
        "vector-algorithms".flags.internalchecks = false;
        "vector-algorithms".flags.llvm = false;
        "vector-algorithms".flags.properties = true;
        "vector-algorithms".flags.boundschecks = true;
        "vector-algorithms".flags.unsafechecks = false;
        "vector-algorithms".flags.bench = true;
        "th-abstraction".revision = (((hackage."th-abstraction")."0.4.5.0").revisions).default;
        "semigroupoids".revision = (((hackage."semigroupoids")."5.3.7").revisions).default;
        "semigroupoids".flags.tagged = true;
        "semigroupoids".flags.containers = true;
        "semigroupoids".flags.distributive = true;
        "semigroupoids".flags.unordered-containers = true;
        "semigroupoids".flags.contravariant = true;
        "semigroupoids".flags.comonad = true;
        "hsc2hs".revision = (((hackage."hsc2hs")."0.68.8").revisions).default;
        "hsc2hs".flags.in-ghc-tree = false;
        "data-default-instances-containers".revision = (((hackage."data-default-instances-containers")."0.0.1").revisions).default;
        "semirings".revision = (((hackage."semirings")."0.6").revisions).default;
        "semirings".flags.containers = true;
        "semirings".flags.unordered-containers = true;
        "xml".revision = (((hackage."xml")."1.3.14").revisions).default;
        "lucid".revision = (((hackage."lucid")."2.11.1").revisions).default;
        "bimap".revision = (((hackage."bimap")."0.5.0").revisions).default;
        "prettyprinter-ansi-terminal".revision = (((hackage."prettyprinter-ansi-terminal")."1.1.3").revisions).default;
        "logict".revision = (((hackage."logict")."0.8.0.0").revisions).default;
        "ordered-containers".revision = (((hackage."ordered-containers")."0.2.2").revisions).default;
        "NumInstances".revision = (((hackage."NumInstances")."1.4").revisions).default;
        "these".revision = (((hackage."these")."1.1.1.1").revisions).default;
        "these".flags.assoc = true;
        "split".revision = (((hackage."split")."0.2.3.5").revisions).default;
        "base-orphans".revision = (((hackage."base-orphans")."0.8.7").revisions).default;
        "ghc-bignum".revision = (((hackage."ghc-bignum")."1.2").revisions).default;
        "time-compat".revision = (((hackage."time-compat")."1.9.6.1").revisions).default;
        "time-compat".flags.old-locale = false;
        "typed-process".revision = (((hackage."typed-process")."0.2.10.1").revisions).default;
        "hls-eval-plugin".revision = (((hackage."hls-eval-plugin")."1.3.0.0").revisions).default;
        "hls-eval-plugin".flags.pedantic = false;
        "diagrams-svg".revision = (((hackage."diagrams-svg")."1.4.3.1").revisions).default;
        "diagrams-postscript".revision = (((hackage."diagrams-postscript")."1.5.1").revisions).default;
        "mfsolve".revision = (((hackage."mfsolve")."0.3.2.1").revisions).default;
        "hls-refactor-plugin".revision = (((hackage."hls-refactor-plugin")."1.0.0.0").revisions).default;
        "primitive".revision = (((hackage."primitive")."0.7.4.0").revisions).default;
        "directory".revision = (((hackage."directory")."1.3.6.2").revisions).default;
        "data-clist".revision = (((hackage."data-clist")."0.2").revisions).default;
        "lsp-types".revision = (((hackage."lsp-types")."1.6.0.0").revisions).default;
        "lsp-types".flags.force-ospath = false;
        "vty".revision = (((hackage."vty")."5.37").revisions).default;
        "exceptions".revision = (((hackage."exceptions")."0.10.4").revisions).default;
        "hpc".revision = (((hackage."hpc")."0.6.1.0").revisions).default;
        "SVGFonts".revision = (((hackage."SVGFonts")."1.8.0.1").revisions).default;
        "intervals".revision = (((hackage."intervals")."0.9.2").revisions).default;
        "intervals".flags.herbie = false;
        "optparse-applicative".revision = (((hackage."optparse-applicative")."0.16.1.0").revisions).default;
        "optparse-applicative".flags.process = true;
        "constraints".revision = (((hackage."constraints")."0.13.4").revisions).default;
        "lifted-base".revision = (((hackage."lifted-base")."0.2.3.12").revisions).default;
        "clock".revision = (((hackage."clock")."0.8.3").revisions).default;
        "clock".flags.llvm = false;
        "th-expand-syns".revision = (((hackage."th-expand-syns")."0.4.10.0").revisions).default;
        "hspec-expectations".revision = (((hackage."hspec-expectations")."0.8.2").revisions).default;
        "prettyprinter".revision = (((hackage."prettyprinter")."1.7.1").revisions).default;
        "prettyprinter".flags.buildreadme = false;
        "prettyprinter".flags.text = true;
        "rts".revision = (((hackage."rts")."1.0.2").revisions).default;
        "diagrams-contrib".revision = (((hackage."diagrams-contrib")."1.4.4").revisions).default;
        "dual-tree".revision = (((hackage."dual-tree")."0.2.3.1").revisions).default;
        "blaze-svg".revision = (((hackage."blaze-svg")."0.3.6.1").revisions).default;
        "monad-control".revision = (((hackage."monad-control")."1.0.3.1").revisions).default;
        "semialign".revision = (((hackage."semialign")."1.2.0.1").revisions).default;
        "semialign".flags.semigroupoids = true;
        "circle-packing".revision = (((hackage."circle-packing")."0.1.0.6").revisions).default;
        "transformers".revision = (((hackage."transformers")."0.5.6.2").revisions).default;
        "ghc-check".revision = (((hackage."ghc-check")."0.5.0.8").revisions).default;
        "ghc-check".flags.ghc-check-use-package-abis = true;
        "template-haskell".revision = (((hackage."template-haskell")."2.18.0.0").revisions).default;
        "direct-sqlite".revision = (((hackage."direct-sqlite")."2.3.27").revisions).default;
        "direct-sqlite".flags.haveusleep = true;
        "direct-sqlite".flags.systemlib = false;
        "direct-sqlite".flags.fulltextsearch = true;
        "direct-sqlite".flags.urifilenames = true;
        "direct-sqlite".flags.json1 = true;
        "hfsevents".revision = (((hackage."hfsevents")."0.1.6").revisions).default;
        "blaze-markup".revision = (((hackage."blaze-markup")."0.8.2.8").revisions).default;
        "ghci".revision = (((hackage."ghci")."9.2.4").revisions).default;
        "pretty-show".revision = (((hackage."pretty-show")."1.10").revisions).default;
        "tasty-golden".revision = (((hackage."tasty-golden")."2.3.5").revisions).default;
        "tasty-golden".flags.build-example = false;
        "tasty-rerun".revision = (((hackage."tasty-rerun")."1.1.18").revisions).default;
        "mono-traversable".revision = (((hackage."mono-traversable")."1.0.15.3").revisions).default;
        "conduit-parse".revision = (((hackage."conduit-parse")."0.2.1.1").revisions).default;
        "conduit-parse".flags.enable-hlint-test = false;
        "stm-containers".revision = (((hackage."stm-containers")."1.2").revisions).default;
        "witherable".revision = (((hackage."witherable")."0.4.2").revisions).default;
        "syb".revision = (((hackage."syb")."0.7.2.2").revisions).default;
        "aeson-pretty".revision = (((hackage."aeson-pretty")."0.8.9").revisions).default;
        "aeson-pretty".flags.lib-only = false;
        "fingertree".revision = (((hackage."fingertree")."0.1.5.0").revisions).default;
        "th-reify-many".revision = (((hackage."th-reify-many")."0.1.10").revisions).default;
        "tasty-hunit".revision = (((hackage."tasty-hunit")."0.10.0.3").revisions).default;
        "conduit-extra".revision = (((hackage."conduit-extra")."1.3.6").revisions).default;
        "algebraic-graphs".revision = (((hackage."algebraic-graphs")."0.6.1").revisions).default;
        "fast-math".revision = (((hackage."fast-math")."1.0.2").revisions).default;
        "brick".revision = (((hackage."brick")."1.3").revisions).default;
        "brick".flags.demos = false;
        "data-default-instances-dlist".revision = (((hackage."data-default-instances-dlist")."0.0.1").revisions).default;
        "force-layout".revision = (((hackage."force-layout")."0.4.0.6").revisions).default;
        "deepseq".revision = (((hackage."deepseq")."1.4.6.1").revisions).default;
        "hie-bios".revision = (((hackage."hie-bios")."0.11.0").revisions).default;
        "unix".revision = (((hackage."unix")."2.7.2.2").revisions).default;
        "ghcide-test-utils".revision = (((hackage."ghcide-test-utils")."1.8.0.0").revisions).default;
        "newtype-generics".revision = (((hackage."newtype-generics")."0.6.2").revisions).default;
        "commutative-semigroups".revision = (((hackage."commutative-semigroups")."0.1.0.0").revisions).default;
        "text-conversions".revision = (((hackage."text-conversions")."0.3.1.1").revisions).default;
        "Chart".revision = (((hackage."Chart")."1.9.4").revisions).default;
        "hie-compat".revision = (((hackage."hie-compat")."0.3.0.0").revisions).default;
        "hie-compat".flags.ghc-lib = false;
        "stm-chans".revision = (((hackage."stm-chans")."3.0.0.6").revisions).default;
        "shake".revision = (((hackage."shake")."0.19.7").revisions).default;
        "shake".flags.portable = false;
        "shake".flags.cloud = false;
        "shake".flags.embed-files = false;
        "ansi-terminal".revision = (((hackage."ansi-terminal")."0.11.3").revisions).default;
        "ansi-terminal".flags.example = false;
        "haskell-src-meta".revision = (((hackage."haskell-src-meta")."0.8.11").revisions).default;
        "microlens-th".revision = (((hackage."microlens-th")."0.4.3.10").revisions).default;
        "blaze-builder".revision = (((hackage."blaze-builder")."0.4.2.2").revisions).default;
        "hls-pragmas-plugin".revision = (((hackage."hls-pragmas-plugin")."1.0.3.0").revisions).default;
        "generic-deriving".revision = (((hackage."generic-deriving")."1.14.2").revisions).default;
        "generic-deriving".flags.base-4-9 = true;
        "Only".revision = (((hackage."Only")."0.1").revisions).default;
        "fast-logger".revision = (((hackage."fast-logger")."3.1.1").revisions).default;
        "hls-alternate-number-format-plugin".revision = (((hackage."hls-alternate-number-format-plugin")."1.2.0.0").revisions).default;
        "hls-class-plugin".revision = (((hackage."hls-class-plugin")."1.1.0.0").revisions).default;
        "hashable".revision = (((hackage."hashable")."1.4.1.0").revisions).default;
        "hashable".flags.containers = true;
        "hashable".flags.random-initial-seed = false;
        "hashable".flags.integer-gmp = true;
        "integer-gmp".revision = (((hackage."integer-gmp")."1.1").revisions).default;
        "floatshow".revision = (((hackage."floatshow")."0.2.4").revisions).default;
        "floatshow".flags.gmp = true;
        "cmdargs".revision = (((hackage."cmdargs")."0.10.21").revisions).default;
        "cmdargs".flags.quotation = true;
        "cmdargs".flags.testprog = false;
        "transformers-compat".revision = (((hackage."transformers-compat")."0.7.2").revisions).default;
        "transformers-compat".flags.two = false;
        "transformers-compat".flags.mtl = true;
        "transformers-compat".flags.four = false;
        "transformers-compat".flags.five = false;
        "transformers-compat".flags.five-three = true;
        "transformers-compat".flags.three = false;
        "transformers-compat".flags.generic-deriving = true;
        "dependent-sum".revision = (((hackage."dependent-sum")."0.7.1.0").revisions).default;
        "indexed-traversable-instances".revision = (((hackage."indexed-traversable-instances")."0.1.1.1").revisions).default;
        "monoid-extras".revision = (((hackage."monoid-extras")."0.6.1").revisions).default;
        "process-extras".revision = (((hackage."process-extras")."0.7.4").revisions).default;
        "scientific".revision = (((hackage."scientific")."0.3.7.0").revisions).default;
        "scientific".flags.bytestring-builder = false;
        "scientific".flags.integer-simple = false;
        "githash".revision = (((hackage."githash")."0.1.6.2").revisions).default;
        "binary".revision = (((hackage."binary")."0.8.9.0").revisions).default;
        "ansi-wl-pprint".revision = (((hackage."ansi-wl-pprint")."0.6.9").revisions).default;
        "ansi-wl-pprint".flags.example = false;
        "fourmolu".revision = (((hackage."fourmolu")."0.8.2.0").revisions).default;
        "fourmolu".flags.dev = false;
        "fourmolu".flags.fixity-th = true;
        "QuickCheck".revision = (((hackage."QuickCheck")."2.14.2").revisions).default;
        "QuickCheck".flags.old-random = false;
        "QuickCheck".flags.templatehaskell = true;
        "safe-exceptions".revision = (((hackage."safe-exceptions")."0.1.7.3").revisions).default;
        "uuid-types".revision = (((hackage."uuid-types")."1.0.5").revisions).default;
        "shake-bench".revision = (((hackage."shake-bench")."0.1.1.0").revisions).default;
        "monad-loops".revision = (((hackage."monad-loops")."0.4.3").revisions).default;
        "monad-loops".flags.base4 = true;
        "auto-update".revision = (((hackage."auto-update")."0.1.6").revisions).default;
        "containers".revision = (((hackage."containers")."0.6.5.1").revisions).default;
        "co-log-core".revision = (((hackage."co-log-core")."0.3.1.0").revisions).default;
        "StateVar".revision = (((hackage."StateVar")."1.2.2").revisions).default;
        "Glob".revision = (((hackage."Glob")."0.10.2").revisions).default;
        "colour".revision = (((hackage."colour")."2.3.6").revisions).default;
        };
      compiler = {
        version = "9.2.4";
        nix-name = "ghc924";
        packages = {
          "ghc-boot" = "9.2.4";
          "pretty" = "1.1.3.6";
          "text" = "1.2.5.0";
          "array" = "0.5.4.0";
          "ghc" = "9.2.4";
          "Cabal" = "3.6.3.0";
          "mtl" = "2.2.2";
          "parsec" = "3.1.15.0";
          "bytestring" = "0.11.3.1";
          "filepath" = "1.4.2.2";
          "stm" = "2.5.0.2";
          "terminfo" = "0.4.1.5";
          "ghc-heap" = "9.2.4";
          "ghc-prim" = "0.8.0";
          "ghc-boot-th" = "9.2.4";
          "base" = "4.16.3.0";
          "time" = "1.11.1.1";
          "process" = "1.6.13.2";
          "ghc-bignum" = "1.2";
          "directory" = "1.3.6.2";
          "exceptions" = "0.10.4";
          "hpc" = "0.6.1.0";
          "rts" = "1.0.2";
          "transformers" = "0.5.6.2";
          "template-haskell" = "2.18.0.0";
          "ghci" = "9.2.4";
          "deepseq" = "1.4.6.1";
          "unix" = "2.7.2.2";
          "integer-gmp" = "1.1";
          "binary" = "0.8.9.0";
          "containers" = "0.6.5.1";
          };
        };
      };
  extras = hackage:
    {
      packages = {
        haskell-language-server = ./.plan.nix/haskell-language-server.nix;
        };
      };
  modules = [
    ({ lib, ... }:
      {
        packages = {
          "haskell-language-server" = {
            flags = {
              "tactic" = lib.mkOverride 900 true;
              "rename" = lib.mkOverride 900 true;
              "stan" = lib.mkOverride 900 true;
              "refactor" = lib.mkOverride 900 true;
              "class" = lib.mkOverride 900 true;
              "splice" = lib.mkOverride 900 true;
              "refineimports" = lib.mkOverride 900 true;
              "pragmas" = lib.mkOverride 900 true;
              "qualifyimportednames" = lib.mkOverride 900 false;
              "changetypesignature" = lib.mkOverride 900 true;
              "alternatenumberformat" = lib.mkOverride 900 true;
              "hlint" = lib.mkOverride 900 false;
              "dynamic" = lib.mkOverride 900 true;
              "floskell" = lib.mkOverride 900 true;
              "coderange" = lib.mkOverride 900 true;
              "haddockcomments" = lib.mkOverride 900 false;
              "explicitfixity" = lib.mkOverride 900 true;
              "importlens" = lib.mkOverride 900 true;
              "retrie" = lib.mkOverride 900 true;
              "stylishhaskell" = lib.mkOverride 900 false;
              "eval" = lib.mkOverride 900 true;
              "gadt" = lib.mkOverride 900 true;
              "fourmolu" = lib.mkOverride 900 true;
              "ignore-plugins-ghc-bounds" = lib.mkOverride 900 false;
              "callhierarchy" = lib.mkOverride 900 true;
              "modulename" = lib.mkOverride 900 true;
              "brittany" = lib.mkOverride 900 true;
              "pedantic" = lib.mkOverride 900 false;
              "ormolu" = lib.mkOverride 900 true;
              };
            };
          };
        })
    ({ lib, ... }:
      {
        packages = {
          "shake".components.library.planned = lib.mkOverride 900 true;
          "focus".components.library.planned = lib.mkOverride 900 true;
          "ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "base16-bytestring".components.library.planned = lib.mkOverride 900 true;
          "terminal-size".components.library.planned = lib.mkOverride 900 true;
          "invariant".components.library.planned = lib.mkOverride 900 true;
          "text-rope".components.library.planned = lib.mkOverride 900 true;
          "transformers-base".components.library.planned = lib.mkOverride 900 true;
          "base-orphans".components.library.planned = lib.mkOverride 900 true;
          "groups".components.library.planned = lib.mkOverride 900 true;
          "floatshow".components.library.planned = lib.mkOverride 900 true;
          "th-orphans".components.library.planned = lib.mkOverride 900 true;
          "heaps".components.library.planned = lib.mkOverride 900 true;
          "lucid".components.library.planned = lib.mkOverride 900 true;
          "megaparsec".components.library.planned = lib.mkOverride 900 true;
          "bimap".components.library.planned = lib.mkOverride 900 true;
          "these".components.library.planned = lib.mkOverride 900 true;
          "pretty-simple".components.setup.planned = lib.mkOverride 900 true;
          "cereal".components.library.planned = lib.mkOverride 900 true;
          "deferred-folds".components.library.planned = lib.mkOverride 900 true;
          "cubicbezier".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.exes."ppsh".planned = lib.mkOverride 900 true;
          "resourcet".components.library.planned = lib.mkOverride 900 true;
          "haskell-src-meta".components.library.planned = lib.mkOverride 900 true;
          "extra".components.library.planned = lib.mkOverride 900 true;
          "commutative-semigroups".components.library.planned = lib.mkOverride 900 true;
          "microlens".components.library.planned = lib.mkOverride 900 true;
          "fmlist".components.library.planned = lib.mkOverride 900 true;
          "filepath".components.library.planned = lib.mkOverride 900 true;
          "text-conversions".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-old-locale".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.library.planned = lib.mkOverride 900 true;
          "newtype-generics".components.library.planned = lib.mkOverride 900 true;
          "hls-call-hierarchy-plugin".components.library.planned = lib.mkOverride 900 true;
          "hiedb".components.library.planned = lib.mkOverride 900 true;
          "tasty-rerun".components.library.planned = lib.mkOverride 900 true;
          "hls-module-name-plugin".components.library.planned = lib.mkOverride 900 true;
          "lsp-test".components.library.planned = lib.mkOverride 900 true;
          "distributive".components.library.planned = lib.mkOverride 900 true;
          "pretty".components.library.planned = lib.mkOverride 900 true;
          "utf8-string".components.library.planned = lib.mkOverride 900 true;
          "pretty-simple".components.library.planned = lib.mkOverride 900 true;
          "Cabal".components.library.planned = lib.mkOverride 900 true;
          "vector-space".components.library.planned = lib.mkOverride 900 true;
          "reflection".components.library.planned = lib.mkOverride 900 true;
          "gitrev".components.library.planned = lib.mkOverride 900 true;
          "cereal-vector".components.library.planned = lib.mkOverride 900 true;
          "bytestring".components.library.planned = lib.mkOverride 900 true;
          "tasty-golden".components.library.planned = lib.mkOverride 900 true;
          "sandwich".components.exes."sandwich-discover".planned = lib.mkOverride 900 true;
          "mono-traversable".components.library.planned = lib.mkOverride 900 true;
          "zlib".components.library.planned = lib.mkOverride 900 true;
          "list-t".components.library.planned = lib.mkOverride 900 true;
          "strict".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.setup.planned = lib.mkOverride 900 true;
          "comonad".components.library.planned = lib.mkOverride 900 true;
          "data-fix".components.library.planned = lib.mkOverride 900 true;
          "mtl-compat".components.library.planned = lib.mkOverride 900 true;
          "fourmolu".components.exes."fourmolu".planned = lib.mkOverride 900 true;
          "unliftio".components.library.planned = lib.mkOverride 900 true;
          "SVGFonts".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.exes."readme".planned = lib.mkOverride 900 true;
          "blaze-svg".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "data-clist".components.library.planned = lib.mkOverride 900 true;
          "optparse-simple".components.library.planned = lib.mkOverride 900 true;
          "diagrams-solve".components.library.planned = lib.mkOverride 900 true;
          "xml".components.library.planned = lib.mkOverride 900 true;
          "profunctors".components.library.planned = lib.mkOverride 900 true;
          "exceptions".components.library.planned = lib.mkOverride 900 true;
          "mmorph".components.library.planned = lib.mkOverride 900 true;
          "safe-exceptions".components.library.planned = lib.mkOverride 900 true;
          "statestack".components.library.planned = lib.mkOverride 900 true;
          "call-stack".components.library.planned = lib.mkOverride 900 true;
          "old-time".components.library.planned = lib.mkOverride 900 true;
          "dlist".components.library.planned = lib.mkOverride 900 true;
          "ghc-prim".components.library.planned = lib.mkOverride 900 true;
          "stm-hamt".components.library.planned = lib.mkOverride 900 true;
          "vty".components.exes."vty-demo".planned = lib.mkOverride 900 true;
          "HUnit".components.library.planned = lib.mkOverride 900 true;
          "ghcide-bench".components.library.planned = lib.mkOverride 900 true;
          "some".components.library.planned = lib.mkOverride 900 true;
          "hls-code-range-plugin".components.library.planned = lib.mkOverride 900 true;
          "array".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.exes."haskell-language-server".planned = lib.mkOverride 900 true;
          "hls-explicit-fixity-plugin".components.library.planned = lib.mkOverride 900 true;
          "fast-math".components.library.planned = lib.mkOverride 900 true;
          "hls-floskell-plugin".components.library.planned = lib.mkOverride 900 true;
          "mod".components.library.planned = lib.mkOverride 900 true;
          "Chart-diagrams".components.library.planned = lib.mkOverride 900 true;
          "binary".components.library.planned = lib.mkOverride 900 true;
          "filepattern".components.library.planned = lib.mkOverride 900 true;
          "charset".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot-th".components.library.planned = lib.mkOverride 900 true;
          "stm-chans".components.library.planned = lib.mkOverride 900 true;
          "scientific".components.library.planned = lib.mkOverride 900 true;
          "hls-ormolu-plugin".components.library.planned = lib.mkOverride 900 true;
          "splitmix".components.library.planned = lib.mkOverride 900 true;
          "rts".components.library.planned = lib.mkOverride 900 true;
          "monad-dijkstra".components.library.planned = lib.mkOverride 900 true;
          "temporary".components.library.planned = lib.mkOverride 900 true;
          "tagged".components.library.planned = lib.mkOverride 900 true;
          "active".components.library.planned = lib.mkOverride 900 true;
          "force-layout".components.library.planned = lib.mkOverride 900 true;
          "unix".components.library.planned = lib.mkOverride 900 true;
          "retrie".components.exes."retrie".planned = lib.mkOverride 900 true;
          "file-embed".components.library.planned = lib.mkOverride 900 true;
          "matrices".components.library.planned = lib.mkOverride 900 true;
          "ghcide".components.library.planned = lib.mkOverride 900 true;
          "semirings".components.library.planned = lib.mkOverride 900 true;
          "hsc2hs".components.exes."hsc2hs".planned = lib.mkOverride 900 true;
          "parser-combinators".components.library.planned = lib.mkOverride 900 true;
          "Boolean".components.library.planned = lib.mkOverride 900 true;
          "hls-graph".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.benchmarks."benchmark".planned = lib.mkOverride 900 true;
          "hls-refine-imports-plugin".components.library.planned = lib.mkOverride 900 true;
          "vector".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable-instances".components.library.planned = lib.mkOverride 900 true;
          "data-default-class".components.library.planned = lib.mkOverride 900 true;
          "regex-base".components.library.planned = lib.mkOverride 900 true;
          "adjunctions".components.library.planned = lib.mkOverride 900 true;
          "parallel".components.library.planned = lib.mkOverride 900 true;
          "monoid-extras".components.library.planned = lib.mkOverride 900 true;
          "haddock-library".components.library.planned = lib.mkOverride 900 true;
          "foldl".components.library.planned = lib.mkOverride 900 true;
          "type-equality".components.library.planned = lib.mkOverride 900 true;
          "shake".components.exes."shake".planned = lib.mkOverride 900 true;
          "JuicyPixels".components.library.planned = lib.mkOverride 900 true;
          "directory".components.library.planned = lib.mkOverride 900 true;
          "happy".components.exes."happy".planned = lib.mkOverride 900 true;
          "network-info".components.library.planned = lib.mkOverride 900 true;
          "Diff".components.library.planned = lib.mkOverride 900 true;
          "uuid".components.library.planned = lib.mkOverride 900 true;
          "time".components.library.planned = lib.mkOverride 900 true;
          "retrie".components.exes."demo-retrie".planned = lib.mkOverride 900 true;
          "hashtables".components.library.planned = lib.mkOverride 900 true;
          "MonadRandom".components.library.planned = lib.mkOverride 900 true;
          "intervals".components.library.planned = lib.mkOverride 900 true;
          "network".components.library.planned = lib.mkOverride 900 true;
          "psqueues".components.library.planned = lib.mkOverride 900 true;
          "ListLike".components.library.planned = lib.mkOverride 900 true;
          "string-interpolate".components.library.planned = lib.mkOverride 900 true;
          "vty".components.exes."vty-build-width-table".planned = lib.mkOverride 900 true;
          "ghc-paths".components.library.planned = lib.mkOverride 900 true;
          "cmdargs".components.library.planned = lib.mkOverride 900 true;
          "hie-bios".components.exes."hie-bios".planned = lib.mkOverride 900 true;
          "aeson-pretty".components.exes."aeson-pretty".planned = lib.mkOverride 900 true;
          "word-wrap".components.library.planned = lib.mkOverride 900 true;
          "js-flot".components.library.planned = lib.mkOverride 900 true;
          "StateVar".components.library.planned = lib.mkOverride 900 true;
          "monoid-subclasses".components.library.planned = lib.mkOverride 900 true;
          "fast-logger".components.library.planned = lib.mkOverride 900 true;
          "data-default".components.library.planned = lib.mkOverride 900 true;
          "case-insensitive".components.library.planned = lib.mkOverride 900 true;
          "floskell".components.exes."floskell".planned = lib.mkOverride 900 true;
          "hls-refactor-plugin".components.library.planned = lib.mkOverride 900 true;
          "mfsolve".components.library.planned = lib.mkOverride 900 true;
          "ghc".components.library.planned = lib.mkOverride 900 true;
          "th-expand-syns".components.library.planned = lib.mkOverride 900 true;
          "tasty-expected-failure".components.library.planned = lib.mkOverride 900 true;
          "hls-gadt-plugin".components.library.planned = lib.mkOverride 900 true;
          "text-zipper".components.library.planned = lib.mkOverride 900 true;
          "config-ini".components.library.planned = lib.mkOverride 900 true;
          "unix-time".components.library.planned = lib.mkOverride 900 true;
          "direct-sqlite".components.library.planned = lib.mkOverride 900 true;
          "hls-class-plugin".components.library.planned = lib.mkOverride 900 true;
          "bytes".components.library.planned = lib.mkOverride 900 true;
          "hls-explicit-imports-plugin".components.library.planned = lib.mkOverride 900 true;
          "hls-alternate-number-format-plugin".components.library.planned = lib.mkOverride 900 true;
          "monad-loops".components.library.planned = lib.mkOverride 900 true;
          "co-log-core".components.library.planned = lib.mkOverride 900 true;
          "cryptohash-sha1".components.library.planned = lib.mkOverride 900 true;
          "shake-bench".components.library.planned = lib.mkOverride 900 true;
          "ghc-paths".components.setup.planned = lib.mkOverride 900 true;
          "brick".components.library.planned = lib.mkOverride 900 true;
          "generic-deriving".components.library.planned = lib.mkOverride 900 true;
          "free".components.library.planned = lib.mkOverride 900 true;
          "unix-compat".components.library.planned = lib.mkOverride 900 true;
          "vector-algorithms".components.library.planned = lib.mkOverride 900 true;
          "Chart".components.library.planned = lib.mkOverride 900 true;
          "blaze-builder".components.library.planned = lib.mkOverride 900 true;
          "diagrams-svg".components.library.planned = lib.mkOverride 900 true;
          "primitive-extras".components.library.planned = lib.mkOverride 900 true;
          "sandwich".components.exes."sandwich-demo".planned = lib.mkOverride 900 true;
          "integration".components.library.planned = lib.mkOverride 900 true;
          "bitvec".components.library.planned = lib.mkOverride 900 true;
          "lifted-base".components.library.planned = lib.mkOverride 900 true;
          "unliftio-core".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-containers".components.library.planned = lib.mkOverride 900 true;
          "ghc-bignum".components.library.planned = lib.mkOverride 900 true;
          "safe".components.library.planned = lib.mkOverride 900 true;
          "constraints".components.library.planned = lib.mkOverride 900 true;
          "yaml".components.library.planned = lib.mkOverride 900 true;
          "fsnotify".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable".components.library.planned = lib.mkOverride 900 true;
          "network-uri".components.library.planned = lib.mkOverride 900 true;
          "ghcide".components.exes."ghcide".planned = lib.mkOverride 900 true;
          "ghc-lib-parser".components.library.planned = lib.mkOverride 900 true;
          "ormolu".components.exes."ormolu".planned = lib.mkOverride 900 true;
          "haskell-language-server".components.exes."haskell-language-server-wrapper".planned = lib.mkOverride 900 true;
          "operational".components.library.planned = lib.mkOverride 900 true;
          "hls-rename-plugin".components.library.planned = lib.mkOverride 900 true;
          "hls-pragmas-plugin".components.library.planned = lib.mkOverride 900 true;
          "typed-process".components.library.planned = lib.mkOverride 900 true;
          "base-compat-batteries".components.library.planned = lib.mkOverride 900 true;
          "microlens-th".components.library.planned = lib.mkOverride 900 true;
          "tasty-hunit".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.tests."wrapper-test".planned = lib.mkOverride 900 true;
          "split".components.library.planned = lib.mkOverride 900 true;
          "contravariant".components.library.planned = lib.mkOverride 900 true;
          "enummapset".components.library.planned = lib.mkOverride 900 true;
          "hie-compat".components.library.planned = lib.mkOverride 900 true;
          "syb".components.library.planned = lib.mkOverride 900 true;
          "hp2pretty".components.exes."hp2pretty".planned = lib.mkOverride 900 true;
          "text-short".components.library.planned = lib.mkOverride 900 true;
          "haskell-src-exts".components.library.planned = lib.mkOverride 900 true;
          "lsp".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.library.planned = lib.mkOverride 900 true;
          "assoc".components.library.planned = lib.mkOverride 900 true;
          "process".components.library.planned = lib.mkOverride 900 true;
          "ormolu".components.library.planned = lib.mkOverride 900 true;
          "hls-test-utils".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.library.planned = lib.mkOverride 900 true;
          "hls-change-type-signature-plugin".components.library.planned = lib.mkOverride 900 true;
          "binary-orphans".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter".components.library.planned = lib.mkOverride 900 true;
          "stm-containers".components.library.planned = lib.mkOverride 900 true;
          "clock".components.library.planned = lib.mkOverride 900 true;
          "template-haskell".components.library.planned = lib.mkOverride 900 true;
          "fingertree".components.library.planned = lib.mkOverride 900 true;
          "blaze-markup".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.library.planned = lib.mkOverride 900 true;
          "th-lift".components.library.planned = lib.mkOverride 900 true;
          "libyaml".components.library.planned = lib.mkOverride 900 true;
          "stm".components.library.planned = lib.mkOverride 900 true;
          "ghci".components.library.planned = lib.mkOverride 900 true;
          "retry".components.library.planned = lib.mkOverride 900 true;
          "witherable".components.library.planned = lib.mkOverride 900 true;
          "lens-aeson".components.library.planned = lib.mkOverride 900 true;
          "diagrams-core".components.library.planned = lib.mkOverride 900 true;
          "vty".components.exes."vty-mode-demo".planned = lib.mkOverride 900 true;
          "ghc-check".components.library.planned = lib.mkOverride 900 true;
          "ghc-trace-events".components.library.planned = lib.mkOverride 900 true;
          "primes".components.library.planned = lib.mkOverride 900 true;
          "opentelemetry".components.library.planned = lib.mkOverride 900 true;
          "alex".components.exes."alex".planned = lib.mkOverride 900 true;
          "semialign".components.library.planned = lib.mkOverride 900 true;
          "dual-tree".components.library.planned = lib.mkOverride 900 true;
          "async".components.library.planned = lib.mkOverride 900 true;
          "retrie".components.library.planned = lib.mkOverride 900 true;
          "linear".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot".components.library.planned = lib.mkOverride 900 true;
          "hslogger".components.library.planned = lib.mkOverride 900 true;
          "microlens-mtl".components.library.planned = lib.mkOverride 900 true;
          "haskell-language-server".components.tests."func-test".planned = lib.mkOverride 900 true;
          "cabal-doctest".components.library.planned = lib.mkOverride 900 true;
          "primitive-unlifted".components.library.planned = lib.mkOverride 900 true;
          "hfsevents".components.library.planned = lib.mkOverride 900 true;
          "githash".components.library.planned = lib.mkOverride 900 true;
          "th-compat".components.library.planned = lib.mkOverride 900 true;
          "diagrams-lib".components.library.planned = lib.mkOverride 900 true;
          "hls-fourmolu-plugin".components.library.planned = lib.mkOverride 900 true;
          "vty".components.library.planned = lib.mkOverride 900 true;
          "ordered-containers".components.library.planned = lib.mkOverride 900 true;
          "ghcide-test-utils".components.library.planned = lib.mkOverride 900 true;
          "hpc".components.library.planned = lib.mkOverride 900 true;
          "lens".components.library.planned = lib.mkOverride 900 true;
          "sandwich".components.exes."sandwich-test".planned = lib.mkOverride 900 true;
          "logict".components.library.planned = lib.mkOverride 900 true;
          "NumInstances".components.library.planned = lib.mkOverride 900 true;
          "wcwidth".components.library.planned = lib.mkOverride 900 true;
          "QuickCheck".components.library.planned = lib.mkOverride 900 true;
          "ansi-wl-pprint".components.library.planned = lib.mkOverride 900 true;
          "uuid-types".components.library.planned = lib.mkOverride 900 true;
          "implicit-hie-cradle".components.library.planned = lib.mkOverride 900 true;
          "sandwich".components.library.planned = lib.mkOverride 900 true;
          "process-extras".components.library.planned = lib.mkOverride 900 true;
          "semigroupoids".components.library.planned = lib.mkOverride 900 true;
          "network-bsd".components.library.planned = lib.mkOverride 900 true;
          "fourmolu".components.library.planned = lib.mkOverride 900 true;
          "ghc-heap".components.library.planned = lib.mkOverride 900 true;
          "svg-builder".components.library.planned = lib.mkOverride 900 true;
          "fail".components.library.planned = lib.mkOverride 900 true;
          "attoparsec".components.library.planned = lib.mkOverride 900 true;
          "algebraic-graphs".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-dlist".components.library.planned = lib.mkOverride 900 true;
          "hls-retrie-plugin".components.library.planned = lib.mkOverride 900 true;
          "haskell-lexer".components.library.planned = lib.mkOverride 900 true;
          "hie-bios".components.library.planned = lib.mkOverride 900 true;
          "mtl".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum".components.library.planned = lib.mkOverride 900 true;
          "fuzzy".components.library.planned = lib.mkOverride 900 true;
          "unbounded-delays".components.library.planned = lib.mkOverride 900 true;
          "th-abstraction".components.library.planned = lib.mkOverride 900 true;
          "attoparsec".components.sublibs."attoparsec-internal".planned = lib.mkOverride 900 true;
          "parsers".components.library.planned = lib.mkOverride 900 true;
          "random-shuffle".components.library.planned = lib.mkOverride 900 true;
          "pretty-simple".components.exes."pretty-simple".planned = lib.mkOverride 900 true;
          "transformers".components.library.planned = lib.mkOverride 900 true;
          "diagrams-contrib".components.library.planned = lib.mkOverride 900 true;
          "sqlite-simple".components.library.planned = lib.mkOverride 900 true;
          "circle-packing".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.library.planned = lib.mkOverride 900 true;
          "monad-logger".components.library.planned = lib.mkOverride 900 true;
          "OneTuple".components.library.planned = lib.mkOverride 900 true;
          "th-lift-instances".components.library.planned = lib.mkOverride 900 true;
          "parsec".components.library.planned = lib.mkOverride 900 true;
          "deepseq".components.library.planned = lib.mkOverride 900 true;
          "hiedb".components.exes."hiedb".planned = lib.mkOverride 900 true;
          "lsp-types".components.library.planned = lib.mkOverride 900 true;
          "primitive".components.library.planned = lib.mkOverride 900 true;
          "hls-plugin-api".components.library.planned = lib.mkOverride 900 true;
          "old-locale".components.library.planned = lib.mkOverride 900 true;
          "heapsize".components.library.planned = lib.mkOverride 900 true;
          "js-jquery".components.library.planned = lib.mkOverride 900 true;
          "lifted-async".components.library.planned = lib.mkOverride 900 true;
          "conduit".components.library.planned = lib.mkOverride 900 true;
          "ghc-exactprint".components.library.planned = lib.mkOverride 900 true;
          "blaze-textual".components.library.planned = lib.mkOverride 900 true;
          "operational".components.exes."operational-TicTacToe".planned = lib.mkOverride 900 true;
          "text".components.library.planned = lib.mkOverride 900 true;
          "bifunctors".components.library.planned = lib.mkOverride 900 true;
          "dependent-map".components.library.planned = lib.mkOverride 900 true;
          "unordered-containers".components.library.planned = lib.mkOverride 900 true;
          "random".components.library.planned = lib.mkOverride 900 true;
          "base".components.library.planned = lib.mkOverride 900 true;
          "kan-extensions".components.library.planned = lib.mkOverride 900 true;
          "regex-tdfa".components.library.planned = lib.mkOverride 900 true;
          "integer-logarithms".components.library.planned = lib.mkOverride 900 true;
          "ghcide-bench".components.exes."ghcide-bench".planned = lib.mkOverride 900 true;
          "implicit-hie".components.library.planned = lib.mkOverride 900 true;
          "cryptohash-md5".components.library.planned = lib.mkOverride 900 true;
          "Glob".components.library.planned = lib.mkOverride 900 true;
          "integer-gmp".components.library.planned = lib.mkOverride 900 true;
          "tasty".components.library.planned = lib.mkOverride 900 true;
          "transformers-compat".components.library.planned = lib.mkOverride 900 true;
          "monad-control".components.library.planned = lib.mkOverride 900 true;
          "implicit-hie".components.exes."gen-hie".planned = lib.mkOverride 900 true;
          "streaming-commons".components.library.planned = lib.mkOverride 900 true;
          "colour".components.library.planned = lib.mkOverride 900 true;
          "containers".components.library.planned = lib.mkOverride 900 true;
          "th-reify-many".components.library.planned = lib.mkOverride 900 true;
          "time-compat".components.library.planned = lib.mkOverride 900 true;
          "diagrams-postscript".components.library.planned = lib.mkOverride 900 true;
          "js-dgtable".components.library.planned = lib.mkOverride 900 true;
          "optparse-applicative".components.library.planned = lib.mkOverride 900 true;
          "sorted-list".components.library.planned = lib.mkOverride 900 true;
          "aeson".components.library.planned = lib.mkOverride 900 true;
          "ghcide".components.exes."ghcide-test-preprocessor".planned = lib.mkOverride 900 true;
          "conduit-parse".components.library.planned = lib.mkOverride 900 true;
          "hspec-expectations".components.library.planned = lib.mkOverride 900 true;
          "base-compat".components.library.planned = lib.mkOverride 900 true;
          "hls-eval-plugin".components.library.planned = lib.mkOverride 900 true;
          "base64-bytestring".components.library.planned = lib.mkOverride 900 true;
          "hashable".components.library.planned = lib.mkOverride 900 true;
          "semigroups".components.library.planned = lib.mkOverride 900 true;
          "auto-update".components.library.planned = lib.mkOverride 900 true;
          "fsnotify".components.exes."tests".planned = lib.mkOverride 900 true;
          "easy-file".components.library.planned = lib.mkOverride 900 true;
          "conduit-extra".components.library.planned = lib.mkOverride 900 true;
          "terminfo".components.library.planned = lib.mkOverride 900 true;
          "MemoTrie".components.library.planned = lib.mkOverride 900 true;
          "floskell".components.library.planned = lib.mkOverride 900 true;
          "void".components.library.planned = lib.mkOverride 900 true;
          "Only".components.library.planned = lib.mkOverride 900 true;
          };
        })
    ];
  }